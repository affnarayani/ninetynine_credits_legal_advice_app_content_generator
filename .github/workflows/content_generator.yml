name: Content Generator Workflow

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Monday at midnight UTC

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run blog scraper
        run: python blog_scraper.py
        
      - name: Resize and convert images
        run: python resize_convert_images.py
        
      - name: Process images with Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python image_processor.py
        
      - name: Summarize articles
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python article_summarizer.py
        
      - name: Generate content
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python content_generator.py
        
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: affnarayani/legal_advice_test
          path: target_repo
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: Update content.json in target repository
        run: |
          cp content.json target_repo/content.json
          
      - name: Copy processed images to target repository
        run: |
          mkdir -p target_repo/images
          cp -r processed_images/* target_repo/images/
          
      - name: Commit and push changes to target repository
        working-directory: target_repo
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add content.json images/
          git commit -m "Update content and images via automated workflow"
          git push
          
      - name: Run cleaner
        run: python cleaner.py
        
      - name: Commit changes to source repository
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add .
          git diff --staged --quiet || git commit -m "Update content files via automated workflow"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}